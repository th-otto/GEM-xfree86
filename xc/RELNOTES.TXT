








                      XX WWiinnddooww SSyysstteemm,, VVeerrssiioonn 1111

                              RReelleeaassee 66..44

                             RReelleeaassee NNootteess








                     The Open Group X Project Team

                            30 January, 1998










Copyright (C) 1998   The Open Group

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish, dis-
tribute, sublicense, and/or sell copies of the Software, and to permit
persons to whom the Software is furnished to do so, subject to the fol-
lowing conditions:

The above copyright notice and the following permission notice shall be
included in all copies of the Software:

THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABIL-
ITY, FITNESS FOR A PARTICULAR PURPOSE AND NON- INFRINGEMENT. IN NO EVENT
SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABIL-
ITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF, OR IN CONNECTION WITH THE SOFTWARE OR THE USE OF OTHER DEALINGS
IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not
be used in advertising or otherwise to promote the use or other dealings
in this Software without prior written authorization from The Open
Group.

_X _W_i_n_d_o_w _S_y_s_t_e_m is a trademark of The Open Group.



_1_.  _W_h_a_t _I_s _X_1_1


X11, or X, is a vendor-neutral, system-architecture neutral network-
transparent window system and user interface standard.  In other words
it's windows for UNIX. But X is not just for UNIX -- X runs on a wide
range of computing and graphics machines including Macintosh, OS/2,
Microsoft's MS-Windows family of operating systems, and almost all of
the so-called Network Computers. X can use your network -- you may run
CPU-intensive programs on high powered workstations and display the user
interface (the windows) on inexpensive desktop machines.


_2_.  _W_h_a_t _i_s _R_e_l_e_a_s_e _6_._4


Release 6.4 (R6.4) is The Open Group X Project Team's update to the X
Consortium's Release 6.3 (R6.3) of X11 and all prior releases.  It is
compatible with with all releases going back to R1 at both the source
and protocol levels.

The X Consortium was an independent, not-for-profit membership corpora-
tion formed in 1993 as the successor to the MIT X Consortium.  It was
dissolved at the end of 1996 and all assets such as trademarks and copy-
rights were transferred to The Open Group.

The Open Group's X Project Team was formed to continue maintenance and
development of X. Membership in The Open Group X Project Team does not
require membership in The Open Group. To join the X Project Team contact
the sales office near you -- you can find a list of sales offices at
http://www.opengroup.org/contacts/sales.htm, or download the membership
kit from http://www.opengroup.org/tech/desktop/x/projteam.htm.

Instructions for building and installing R6.4 can be found in the file
INSTALL.PS (PostScript) or INSTALL.TXT (plain text), available sepa-
rately and also contained in the release.


_3_.  _O_v_e_r_v_i_e_w _o_f _t_h_e _X _P_r_o_j_e_c_t _T_e_a_m _R_e_l_e_a_s_e


Like all the releases that preceded it, R6.4 is a source code release.
In order to use the release it is necessary to first unpack the distri-
bution, compile it, and then install it. The source contains the follow-
ing items:

XX CCoonnssoorrttiiuumm SSttaannddaarrddss aanndd XX PPrroojjeecctt TTeeaamm SSppeecciiffiiccaattiioonnss
     The X Consortium produced standards -- documents which define net-
     work protocols, programming interfaces, and other aspects of the X
     environment. These standards continue to exists in the X Project
     Team release. The X Project Team produces specifications.  Like X
     Consortium Standards, these are documents which define network pro-
     tocols, programming interfaces, and other aspects of the X environ-
     ment. Under the aegis of The Open Group, X Consortium standards, X
     Project Team specifications, and other specifications are the basis
     for portions of The Open Group's various CAE Specifications. Some
     of the new features in this release are not _s_t_a_n_d_a_r_d, that is,
     there is no accompanying specification.

IImmpplleemmeennttaattiioonnss
     For most of X Consortium standards and X Project Team specifica-
     tions, a high-quality implementations is provided to demonstrate
     proof of concept, to give vendors a base to use, and early adopters
     a chance to begin developing using the new features. These are not
     _r_e_f_e_r_e_n_c_e implementations -- the written specifications are the
     authoritative definition.

FFoonnttss
     A collection of bitmap and outline fonts are included in the dis-
     tribution, contributed by various individuals and companies.

UUttiilliittyy LLiibbrraarriieess
     A number of libraries, such as Xmu and the Athena Widget Set, are
     included. These are not standards, but are used in building the
     applications contained in the release and may be useful in building
     other applications.

PPrrooggrraammss
     We also provide a number of application programs. A few of these
     programs, such as _x_d_m (or its equivalent), should be considered
     essential in almost all environments. The rest of the applications
     carry no special status; they are simply programs that have been
     developed and/or maintained by X Consortium and X Project Team
     staff.  In some cases, you will find better substitutes for these
     programs contributed by others.


_4_.  _S_u_p_p_o_r_t_e_d _O_p_e_r_a_t_i_n_g _S_y_s_t_e_m_s


This release was built and tested on the following reference platforms:


        Digital Unix 4.0A
        Fujitsu UXP V20L10
        HPUX 10.20
        Solaris 2.5


This release was also built on the following systems:


        AIX 4.2
        IRIX 6.2
        FreeBSD 2.2.2
        S.u.S.E. Linux 5.0.0 (kernel 2.0.30, libc 5.4.33)
        SunOS 4.1.4
        Windows NT 3.51 (NCD WinCenter)


In all cases except SunOS we have used the vendor's compiler. On SunOS
we build with the GNU C compiler (_g_c_c).


_5_.  _S_u_p_p_o_r_t_e_d _G_r_a_p_h_i_c_s _D_e_v_i_c_e_s


This release includes the necessary device-dependent support to build a
native X server for the following platforms:


        HP-UX: Xhp
        Digital Unix: Xdec on DECstation 3000/400 (Alpha) with PMAG-B
        SunOS/Solaris: Xsun -- see the Xsun man page for supported cards
        XFree86: See the XF_* man pages for supported cards

In addition to the above, the Xvfb and Xnest servers can be built on all
platforms.

Native X servers are not built on AIX, Fujitsu UXP, IRIX, or Microsoft
Windows NT.


_6_.  _T_h_e _S_o_u_r_c_e _T_r_e_e


The source is distributed in UNIX tar files. The source unpacks from the
tar files into a source tree, and the name of the base directory of  the
source  tree  is xxcc. The name xxcc as the base of the source tree has been
retained from the X Consortium releases.

The general layout under xxcc// is as follows:


config/             imake config files, _i_m_a_k_e, _m_a_k_e_d_e_p_e_n_d, etc.
doc/                all documentation other than per-program manual pages
fonts/              BDF, Speedo, Type1 fonts
include/            common include files
lib/                libraries
nls/                national language support files
programs/           all programs, including the X server and _r_g_b,
util/               _p_a_t_c_h, _c_o_m_p_r_e_s_s, other utilities
bug-report          bug reporting template
registry            X Registry



_7_.  _X _R_e_g_i_s_t_r_y


The X Project Team maintains a registry of certain X-related items to
aid in avoiding conflicts and to aid in sharing of such items. The reg-
istry is in the file xxcc//rreeggiissttrryy.


_8_.  _E_x_t_e_n_s_i_o_n_s _S_u_p_p_o_r_t_e_d


Release 6.4  includes source for the following extensions: BIG-REQUESTS,
DOUBLE-BUFFER, DPMS, Extended-Visual-Information, LBX, MIT-SHM, MIT-
SUNDRY-NONSTANDARD, Multi-Buffering, RECORD, SECURITY, SHAPE, SYNC, TOG-
CUP, X3D-PEX, XC-APPGROUP, XC-MISC, XFree86-VidModeExtension, XIE (X
Image Extension), XINERAMA.  XInputExtension, XKEYBOARD, XpExtension
(printing), XTEST, and XTestExtension1,

Not all of these extensions are standard; see the Standards manual page.
Some of these extensions may not be supported on every platform.


_9_.  _I_m_p_l_e_m_e_n_t_a_t_i_o_n _D_e_p_e_n_d_e_n_t _P_a_r_a_m_e_t_e_r_s


Some of the specifications define some behavior as implementation-depen-
dent. Implementations of the X Consortium standards and X Project Team
specifications must document how those parameters are implemented.

The default values in this release of the implementation dependent
parameters are:


XFILESEARCHPATH default:
     This default can be set at build time by setting the _i_m_a_k_e vari-
     ables XFileSearchPathDefault, XAppLoadDir, XFileSearchPathBase, and
     ProjectRoot in xxcc//ccoonnffiigg//ccff//ssiittee..ddeeff. See xxcc//ccoonnffiigg//ccff//RREEAADDMMEE for
     instructions and xxcc//ccoonnffiigg//ccff//XX1111..ttmmppll for details of how these
     configuration variables are used.

     By default the imake variable ProjectRoot is //uussrr//XX1111RR66..44 and
     XFILESEARCHPATH has these components:

             _$_P_r_o_j_e_c_t_R_o_o_t/lib/X11/%L/%T/%N%C%S
             _$_P_r_o_j_e_c_t_R_o_o_t/lib/X11/%l/%T/%N%C%S
             _$_P_r_o_j_e_c_t_R_o_o_t/lib/X11/%T/%N%C%S
             _$_P_r_o_j_e_c_t_R_o_o_t/lib/X11/%L/%T/%N%S
             _$_P_r_o_j_e_c_t_R_o_o_t/lib/X11/%l/%T/%N%S
             _$_P_r_o_j_e_c_t_R_o_o_t/lib/X11/%T/%N%S



XUSERFILESEARCHPATH default:
     If the environment variable XAPPLRESDIR is defined, the default
     value of XUSERFILESEARCHPATH has the following components:

             $XAPPLRESDIR/%L/%N%C
             $XAPPLRESDIR/%l/%N%C
             $XAPPLRESDIR/%N%C
             $HOME/%N%C
             $XAPPLRESDIR/%L/%N
             $XAPPLRESDIR/%l/%N
             $XAPPLRESDIR/%N
             $HOME/%N

     Otherwise it has these components:

             $HOME/%L/%N%C
             $HOME/%l/%N%C
             $HOME/%N%C
             $HOME/%L/%N
             $HOME/%l/%N
             $HOME/%N



XKEYSYMDB default:
     Defaults to _$_P_r_o_j_e_c_t_R_o_o_t//lliibb//XX1111//XXKKeeyyssyymmDDBB.


XCMSDB default:
     Defaults to _$_P_r_o_j_e_c_t_R_o_o_t//lliibb//XX1111//XXccmmss..ttxxtt.


XLOCALEDIR default:
     Defaults to the directory _$_P_r_o_j_e_c_t_R_o_o_t//lliibb//XX1111//llooccaallee.  The XLO-
     CALEDIR variable can contain multiple colon-separated pathnames.


XErrorDB location
     The Xlib error database file is _$_P_r_o_j_e_c_t_R_o_o_t//lliibb//XX1111//XXEErrrroorrDDBB.


XtErrorDB location
     The Xt error database file is _$_P_r_o_j_e_c_t_R_o_o_t//lliibb//XX1111//XXttEErrrroorrDDBB.


Supported Locales
     Locales supported by this implementation are in xxcc//nnllss//llooccaallee..ddiirr.
     The mapping between various system locale names and X locale names
     is in xxcc//nnllss//llooccaallee..aalliiaass. Both files are installed in the default
     XLOCALEDIR directory, i.e. _$_P_r_o_j_e_c_t_R_o_o_t//lliibb//XX1111//llooccaallee//).


Supported Input Methods
     This distribution does not include source for any input method
     servers; however Xlib supplies a default built-in input method that
     supports compose processing in 8-bit locales. Compose files are
     provided for Latin-1 and Latin-2. The built-in input method can
     support other locales, given suitable compose files. See
     xxcc//nnllss//CCoommppoossee//iissoo88885599--** for the supported compositions.

The Input Method Server Development Kit (IMdkit) is at
ftp://ftp.x.org/pub/unsupported/lib/IMdkit/.


_1_0_.  _W_h_a_t _I_s _N_e_w _i_n _R_e_l_e_a_s_e _6_._4


This section describes changes in the X Project Team distribution since
Release 6.3.

The major new functionality in R6.4 is: Display Power Management Signal-
ing (DPMS) to set "green" computer monitors into power saving mode;
Extended Visual Information to allow applications to discover more about
the graphics capabilities of the server than the core protocol allows;
Colormap Utilization Policy (TOG-CUP) allows applications to discover
desktop special colors, e.g.  MS-Windows reserved (pre-allocated) colors
on PC-Xservers, and store read-only (sharable) colors in specific loca-
tions in a colormap; and Xinerama, a wide screen server that combines
two or more screens into a single virtual screen.

The X Toolkit Intrinsics library (libXt) now has IBM's Easy Resource
Configuration support included.

Xlib (libX11) has two new APIs: XkbSetPerClientControls and XkbGetPer-
ClientControls. These two functions were unintentionally omitted from
the library in previous releases.

The XFree86 servers are now based on XFree86 3.3.1.


_1_1_.  _W_h_a_t _i_s _U_n_c_h_a_n_g_e_d _i_n _R_e_l_e_a_s_e _6_._4


As this is an update release, there is a great deal of stability in the
standards, libraries, and clients. No existing standards have changed in
a material way; although some documents have been updated with minor
corrections. The extension library, _l_i_b_X_e_x_t, is updated to include the
DPMS, Extended-Visual-Information, TOG-CUP, and XINERAMA extension
interfaces. All previous interfaces in these and all other libraries are
unchanged.


_1_2_.  _N_e_w _O_S _S_u_p_p_o_r_t


The  following  table  shows  the versions of the operating systems that
were used to develop this and prior releases:


System         R6        R6.1      R6.[23]   R6.4

AIX            3.2.5     4.1.4     4.2       4.2
A/UX           3.0.1     -         -         -
BSD/386        1.0       -         -         -
Digital Unix (OSF/1)     1.0/1.3   3.2C      4.0A4.0A
FreeBSD        -         2.1.0     2.1.6     2.2.2
Fujitsu UXP    -         -         -         V20L10
HP-UX          9.1       10.01     10.01     10.20
IRIX           5.2       5.3       6.2       6.2
Linux (kernel)
  Slackware 2.3          -         1.2.11    --
  Slackware 3.1          -         -         2.0-
  S.u.S.E. 5.0 -         -         -         2.0.30
Mach           2.5       -         -         -
NEWS-OS        6.0       -         -         -
Solaris        2.3       2.4       2.5       2.5
SunOS          4.1.3     4.1.3     4.1.4     4.1.4
Ultrix-32      4.3       4.4       -         -
UNICOS         8.0       -         -         -
Unixware SVR4.2          1.0       2.02      2.02-
Windows NT     3.1       3.5       4.0       3.51



_1_3_.  _N_e_w _S_p_e_c_i_f_i_c_a_t_i_o_n_s


The following are the new X Project Team specifications in Release 6.4.
Each is described in its own section below.

        Display Power Management Signalling (DPMS)
        Extended Visual Information (EVI)
        Colormap Utilization Policy (TOG-CUP)



_1_3_._1_.  _D_i_s_p_l_a_y _P_o_w_e_r _M_a_n_a_g_e_m_e_n_t _S_i_g_n_a_l_i_n_g


This extension provides X Protocol control over the VESA Display Power
Management Signaling (DPMS) characteristics of video boards under con-
trol of the X Window System.

Traditionally, the X Window System has provided for both blanking and
non-blanking screen savers.  Timeouts associated with these built-in
screen saver mechanisms are limited to idle (dwell) time, and a change
timeout that specifies the change interval for non-blanking screen
savers.

The United States' Environmental Protection Agency (EPA) Energy Star
program requires that monitors power down after some idle time by
default. While it is possible to simply overload the existing screen
saver timeouts, this solution leaves the non-privileged user little to
no control over the DPMS characteristics of his or her system.  For
example, disabling DPMS would require some unintended side effect in the
core screen saver, such as disabling the changing of a non-blanking
screen saver.


_1_3_._2_.  _E_x_t_e_n_d_e_d _V_i_s_u_a_l _I_n_f_o_r_m_a_t_i_o_n


The Extended Visual Information (EVI) extension allows a client to
determine information about core X visuals beyond what the core protocol
provides.

As the X Window System has evolved, it has become clear that the infor-
mation returned by the core X protocol regarding Visuals is often insuf-
ficient for a client to determine which is the most appropriate visual
for its needs. This extension allows clients to query the X server for
additional visual information, specifically as regards colormaps and
framebuffer levels.

This extension is meant to address the needs of pure X clients only.  It
is specifically and purposefully not designed to address the needs of X
extensions. Extensions that have an impact on visual information should
provide their own mechanisms for delivering that information. For exam-
ple, the Double Buffering Extension (DBE) provides its own mechanism for
determining which visuals support double-buffering.


_1_3_._3_.  _C_o_l_o_r_m_a_p _U_t_i_l_i_z_a_t_i_o_n _P_o_l_i_c_y


This extension has three purposes: a) to provide mechanism for a special
application (a colormap manager) to discover any special colormap
requirements, e.g. the colormap entries that are nominally reserved for
desktop colors in the MS-Windows environment and initialize the default
colormap so that it can be more easily shared; and b) to encourage col-
ormap sharing and reduce colormap flashing on low-end 8-bit frame
buffers by providing a policy for sharing; and c) when colormaps aren't
shared, define a behavior in the X server color allocation scheme to
reduce colormap flashing.

To encourage colormap sharing and accommodate special colormap require-
ments two new protocols are defined: the first provides a way to query
the server for a list of reserved colormap entries, and the second is a
way to initialize read-only (sharable) colormap entries at specific
locations in a colormap.

To minimize colormap flashing when the root window's default visual is
one of GrayScale, PseudoColor, or DirectColor, and a private colormap
for the default visual is being used, a minor (but compatible) change to
the server implementation of the AllocColor and AllocNamedColor requests
is required. Where the core protocol says nothing about the pixel values
returned, when this extension is in effect, the AllocColor and Alloc-
NamedColor requests will first look for a matching color in the default
colormap, and, if a match is found and the same cell in the private col-
ormap has not already been allocated, the color will be allocated in the
private colormap at the same location as in the default colormap
(instead of in the first available location.)


_1_4_.  _E_a_s_y _R_e_s_o_u_r_c_e _C_o_n_f_i_g_u_r_a_t_i_o_n


Setting and changing resources in X applications can be difficult for
both the application programmer and the end user.  RReessoouurrccee CCoonnffiigguurraa--
ttiioonn MMaannaaggeemmeenntt ((RRCCMM)) addresses this problem by changing the XX IInnttrriinn--
ssiiccss to immediately modify a resource for a specified widget and each
child widget in the hierarchy.  In this context, immediate means: no
sourcing of a resource file is required; the application does not need
to be restarted for the new resource values to take effect; and the
change occurs immediately.

The main difference between RRCCMM and the EEddiittrreess protocol is that the RRCCMM
customizing hooks reside in the IInnttrriinnssiiccss and thus are linked with
other toolkits such as Motif and the Athena widgets. However, the
EEddiittRReess protocol requires the application to link with the EEddiittRReess rou-
tines in the Xmu library and Xmu is not used by all applications that
use Motif.

Easy Resource Configuration is not a standard part of the X Toolkit
Intrinsics (libXt). It is neither an X Consortium standard nor an X Pro-
ject Team specification.


_1_5_.  _X_i_n_e_r_a_m_a


The Xinerama extension provides a way for a multi-headed system to func-
tion as one large screen. Windows can span multiple screens and can move
from one screen to another.

Currently, the Xinerama Extension works in a homogeneous graphics envi-
ronment. A graphics environment is considered homogeneous if, for exam-
ple, all of the graphics cards have 8 planes with 6 visuals.  Mixing a
24-plane graphics card with a 8-plane card creates a heterogeneous envi-
ronment.

Unlike other multiple screen implementations, Xinerama provides a solu-
tion at the device-independent level. The advantage of this approach is
that it reduces the amount of work involved in supporting and maintain-
ing the extension. The number of graphics devices on the market contin-
ues to grow; embedding the extension functionality into the device
dependent code for each device would be a maintenance nightmare. Since
the Xinerama implementation does not require any low-level graphics mod-
ifications, existing device-dependent code does not have to be recom-
piled. In the loadable server world, the Xinerama Extension will work
with existing device-dependent shared libraries.

The Xinerama extension is not a standard. It is neither an X Consortium
standard nor an X Project Team specification.


_1_6_.  _A_N_S_I_f_i_c_a_t_i_o_n


R6.1 was officially the last release that supported traditional K&R C.
Like R6.3, R6.4 assumes a Standard C compiler and environment. We have
not intentionally removed any K&R C support from old code, and most of
the release will continue to build on platforms without an ANSI C com-
piler.


_1_7_.  _V_S_W_5


We have tested this release with VSW5 version 5.0.0. This release passes
all tests in VSW5 with the following exceptions:

+o    tests for which a permanent waiver has been granted.

+o    tests for which a temporary waiver have been granted.

+o    tests where a defect in the test has been identified and reported.

VSW licensees may obtain a list of waivers granted from
http://www.rdg.opengroup.org/interpretations/database/.


_1_8_.  _Y_e_a_r _2_0_0_0 _(_Y_2_K_) _C_o_m_p_l_i_a_n_c_e


For a statement of compliance see http://www.camb.open-
group.org/tech/desktop/faq/y2k.htm


_1_9_.  _M_e_m_o_r_y _T_e_s_t_i_n_g


Beginning circa X11R5 the MIT X Consortium staff, and later the X Con-
sortium, Inc. staff, and now the X Project Team staff have routinely
tested this implementation for a variety of memory-type errors such as
leaks, array bounds writes, uninitialized memory reads, and a variety of
other errors; using a combination of commercial and "home grown" memory
testing tools. All the real problems were fixed long ago; however we
aren't so naive as to believe that there no remaining bugs. If you find
a memory problem in this implementation please file a bug-report. If you
find a memory problem in your vendor's implementation, tell your vendor.
The popular commercial memory checking tools emit lots of false or spu-
rious warnings, most of which can be safely ignored.


_2_0_.  _S_e_c_u_r_i_t_y _C_o_n_s_i_d_e_r_a_t_i_o_n_s


On UNIX and UNIX-like operating systems there are serious security
implications associated with running suid-root programs.

By default the xterm terminal emulation program is installed suid-root
in order to be able to update utmp or utmpx entries. All the known (as
of this writing) exploitable security holes in the X libraries have been
eliminated -- making it theoretically safe for xterm to be suid-root.
For additional security you may install xterm without suid-root; however
if you do, xterm will not be able to make utmp or utmpx entries.

On many Intel-based machines the X server must have root privileges in
order to access the graphics card and open other devices. The easiest
way to grant the requisite privileges is to use xdm to run your X
server. Some people, who prefer not to use xdm, often work around the
need for the X server to run with root privileges by making their X
server a suid-root program. While all the known (as of this writing)
exploitable security holes in the server have been eliminated, the X
Project Team still recommends that you nnoott make your X server suid-root.
There are _s_a_f_e suid-root wrapper programs available (but not in this
release) that you can use to start your server if you don't want to use
xdm.


_2_1_.  _F_i_l_i_n_g _B_u_g _R_e_p_o_r_t_s


If you find a reproducible bug in software built from the source in this
distribution or find bugs in its documentation, please complete a bug-
report using the form in the file xxcc//bbuugg--rreeppoorrtt and send it to The Open
Group X Project Team at

        mailto:xbugs@opengroup.org


Please try to provide all of the information requested on the form if it
is applicable; the little extra time you spend on the report will make
it much easier for someone to reproduce, find, and fix the bug.

Bugs in the contributed software that is available on the net are not
handled on any official basis. Consult the documentation for the indi-
vidual software to see where (if anywhere) to report the bug.


_2_2_.  _A_c_k_n_o_w_l_e_d_g_e_m_e_n_t_s


Release 6.4 of X11 was brought to you by the X Project Team staff at The
Open Group: Arthur Barstow, Kaleb Keithley, Sekhar Makkapati, M.S.
Ramesh, Jingping Ge, Ken Flowers, and Dave Knorr.

Several companies and individuals have cooperated and worked hard to
make this release a reality, and our thanks go out to them:

Madeline Asmus of Digital for Xinerama.

Peter Daifuku of Silicon Graphics for Extended-Visual-Information.

Scott Revelt of Sun Microsystems for preliminary work on TOG-CUP.

Rob Lembree, formerly of Digital, for DPMS.

Jeff Walls of Hewlett Packard.

Wojtek Jarosz of Attachmate.

Bob Schulman of Seaweed.

Brian Bobryk of Digital.

Tom Brown of NetManage.

Garry Paxinos of Metro Link.

Victor Gold of Peritek.

Jackie Drane of IBM.
